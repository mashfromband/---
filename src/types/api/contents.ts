/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/hello": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Hello world */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Hello world */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getHelloResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/genre": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ジャンル一覧取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ジャンル一覧 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            genres: components["schemas"]["getAllGenreResponse"][];
                            /**
                             * @description 総ジャンル数
                             * @example 100
                             */
                            total: number;
                        };
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/genre/{genreId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ジャンルを指定して情報取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description ジャンルID
                     * @example genre0123456789
                     */
                    genreId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ジャンル詳細 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getOneGenreResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないジャンル */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/category/{categoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** カテゴリを指定して情報取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description カテゴリID
                     * @example category0123456789
                     */
                    categoryId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description カテゴリ詳細 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getOneCategoryResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないジャンル */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quest/{questId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** クエストを指定して情報取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description クエストID
                     * @example quest0123456789
                     */
                    questId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description クエスト詳細 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getOneQuestResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないクエスト */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quest/{questId}/session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** クエストセッション新規作成 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description クエストID
                     * @example quest0123456789
                     */
                    questId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description クエストセッション生成成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postQuestMissionResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないクエスト */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quest/{questId}/session/{sessionToken}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** クエストセッション内容取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ミッションに再挑戦するか否か
                     * @example 1
                     */
                    isRetryMission?: string;
                    /**
                     * @description 現在のミッションの位置
                     * @example 2
                     */
                    currentMissionIndex?: number;
                };
                header?: never;
                path: {
                    /**
                     * @description クエストID
                     * @example quest0123456789
                     */
                    questId: string;
                    /**
                     * @description クエストセッションID
                     * @example mxUtp-vKFLoRXucQf3b3gbNXOESNcTajSLuvzdpC7P8
                     */
                    sessionToken: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description クエストセッション内容 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getQuestMissionResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないクエストセッション */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** クエストミッション回答 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description クエストID
                     * @example quest0123456789
                     */
                    questId: string;
                    /**
                     * @description クエストセッションID
                     * @example mxUtp-vKFLoRXucQf3b3gbNXOESNcTajSLuvzdpC7P8
                     */
                    sessionToken: string;
                };
                cookie?: never;
            };
            /** @description クエストミッション回答内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postQuestMissionSessionRequest"];
                };
            };
            responses: {
                /** @description クエストミッション回答結果 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postQuestMissionSessionResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないクエストセッション */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** クエスト中止 */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description クエストID
                     * @example quest0123456789
                     */
                    questId: string;
                    /**
                     * @description クエストセッションID
                     * @example mxUtp-vKFLoRXucQf3b3gbNXOESNcTajSLuvzdpC7P8
                     */
                    sessionToken: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description クエスト終了了解 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないクエストセッション */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quest/{questId}/session/{sessionToken}/result": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** クエスト結果取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description クエストID
                     * @example quest0123456789
                     */
                    questId: string;
                    /**
                     * @description クエストセッションID
                     * @example mxUtp-vKFLoRXucQf3b3gbNXOESNcTajSLuvzdpC7P8
                     */
                    sessionToken: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description クエスト結果 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getResultQuestMissionResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないクエストセッション */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身の情報を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身のユーザー情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserInfoByMyself"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** 自分自身の情報を更新する */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 更新内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["putUserInfoByMyself"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["putResponseUserInfoByMyself"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/private-profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身の個人情報を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身の個人情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserPrivateProfileByMyself"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** 自分自身の個人情報を更新する */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 更新内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["putUserPrivateProfileByMyself"];
                };
            };
            responses: {
                /** @description 更新成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserPrivateProfileByMyself"];
                    };
                };
                /** @description パラメータに誤りがある */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/educational-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身の学歴を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身の学歴 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserEducationalHistoryByMyself"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 何故かデータが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** 自分自身の学歴を新規追加する */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 学歴新規追加 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postUserEducationalHistoryByMyself"];
                };
            };
            responses: {
                /** @description 新規追加成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description リクエストデータがおかしい */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/educational-history/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 自分自身の学歴を更新する */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 学歴ID
                     * @example 1234567890
                     */
                    id: string;
                };
                cookie?: never;
            };
            /** @description 学歴更新内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["putUserEducationalHistoryByMyself"];
                };
            };
            responses: {
                /** @description 新規追加成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description リクエストデータがおかしい */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分のものではない学歴に対する操作が試みられた */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description IDが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        /** 自分自身の学歴を削除する */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 学歴ID
                     * @example 1234567890
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分のものではない学歴に対する操作が試みられた */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description IDが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/job-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身の職歴を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身の職歴 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserJobHistoryByMyself"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 職歴データが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** 自分自身の職歴を新規追加する */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 職歴新規追加 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postUserJobHistoryByMyself"];
                };
            };
            responses: {
                /** @description 新規追加成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description リクエストデータがおかしい */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/job-history/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 自分自身の職歴を更新する */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 職歴ID
                     * @example 1234567890
                     */
                    id: string;
                };
                cookie?: never;
            };
            /** @description 職歴更新内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["putUserJobHistoryByMyself"];
                };
            };
            responses: {
                /** @description 新規追加成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description リクエストデータがおかしい */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分のものではない職歴に対する操作が試みられた */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description IDが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        /** 自分自身の職歴を削除する */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 職歴ID
                     * @example 1234567890
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分のものではない職歴に対する操作が試みられた */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description IDが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/have-license": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身の所有資格を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身の所有資格 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserHaveLicenseByMyself"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 何故かデータが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** 自分自身の所有資格を新規追加する */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 所有資格新規追加 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postUserHaveLicenseByMyself"];
                };
            };
            responses: {
                /** @description 新規追加成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description リクエストデータがおかしい */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/have-license/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 自分自身の所有資格を更新する */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 所有資格ID
                     * @example 1234567890
                     */
                    id: string;
                };
                cookie?: never;
            };
            /** @description 所有資格更新内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["putUserHaveLicenseByMyself"];
                };
            };
            responses: {
                /** @description 更新成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description リクエストデータがおかしい */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分のものではない職歴に対する操作が試みられた */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description IDが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        /** 自分自身の所有資格を削除する */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 所有資格ID
                     * @example 1234567890
                     */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 削除成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分のものではない職歴に対する操作が試みられた */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description IDが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/quest-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身のクエスト結果履歴を取得する */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                    /**
                     * @description 1が指定されるとクリアしたクエスト履歴のみ取得
                     * @example 1
                     */
                    isClearOnly?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身のクエスト結果履歴 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserQuestHistoryByMyself"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 何故かデータが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/quest-history/{userQuestHistoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身の特定のクエスト結果履歴を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description クエスト履歴ID
                     * @example 1234567890
                     */
                    userQuestHistoryId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身の特定のクエスト結果履歴 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["oneQuestHistory"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description IDが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/skill": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身のスキルを取得する */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身のスキルリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserHaveSkillListResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 何故かデータが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/results": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 自分自身の成績を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 自分自身の成績 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserResultsResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 何故かデータが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/efo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザー保有EFO取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ユーザー保有EFO情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserHaveEfoResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/efo/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** トランザクションIDごとのEFO内容取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description トランザクションID
                     * @example KFGQ0lBMrYL0jfJHP4YUzm3XSdBcDEj3QVQdoJxdFLc
                     */
                    transactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description トランザクションIDごとのEFO情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["oneUserEfoHistory"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないトランザクションです */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/efo/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザーEFO履歴取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                    /**
                     * @description 履歴種別指定
                     * @example all
                     */
                    target?: "all" | "addOnly" | "consumeOnly";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ユーザーEFO履歴 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserEfoHistoryResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/efo/exchange/real": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** EFO -> REAL 交換 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description EFO -> REAL 交換内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postUserMeEfoExchangeRealRequest"];
                };
            };
            responses: {
                /** @description 交換成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postUserMeEfoExchangeRealSuccessResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 交換失敗 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postUserMeEfoExchangeRealFailResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/real": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザー保有リアル取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ユーザー保有リアル情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserHaveRealResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/real/{realId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** IDごとのREAL内容取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description REAL ID
                     * @example ZqKL-f0jPYbtEgv6fbeTOcUagxrVj7QYBwc9ENH8HhM
                     */
                    realId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description IDごとのREAL情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["oneUserRealHistory"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないトランザクションです */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/real/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザーREAL履歴取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                    /**
                     * @description 履歴種別
                     * @example all
                     */
                    target?: "all" | "addOnly" | "consumeOnly";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ユーザーREAL履歴 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserRealHistoryResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/real/exchange/digico": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** REAL -> デジコ交換 */
        post: {
            parameters: {
                query?: {
                    /**
                     * @description デジコでエラーを強制的に発生させる(test環境のみ有効)
                     * @example test01
                     */
                    testMode?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description REAL -> デジコ交換内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postUserMeRealExchangeDigicoRequest"];
                };
            };
            responses: {
                /** @description 交換成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postUserMeRealExchangeDigicoSuccessResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 交換失敗 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postUserMeRealExchangeDigicoFailResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/honor": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得称号取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description セット中の称号の情報もレスポンスに含める
                     * @example 1
                     */
                    withSetHonor?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 取得称号 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserHonorResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** 称号セット */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 称号をセットする */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["putUserHonorRequest"];
                };
            };
            responses: {
                /** @description 称号セット成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 保有していない称号が指定された */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/profile/permission": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** プロフィールパーミッション取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description プロフィールパーミッション */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserProfilePermissionResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** プロフィールパーミッション変更 */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 更新したいプロフィールパーミッション設定 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["putUserProfilePermissionRequest"];
                };
            };
            responses: {
                /** @description プロフィールパーミッション更新完了 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/recruit-company/{recruitCompanyId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 求人企業詳細情報取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 求人企業ID
                     * @example V6Py5iIfmrxlDKy_c4W05lOtvkjcpBgSuIysWJpJTWY
                     */
                    recruitCompanyId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 求人企業詳細情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getRecruitCompanyDetailResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しない企業 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wanted-ads": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 求人広告リスト取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 求人広告リスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getWantedAdsSummaryListResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wanted-ads/{wantedAdsId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 求人広告詳細情報取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 求人広告ID
                     * @example MFn6K2ABCnOMFFv9LvNmHb2X-hjLw8jfgXq9lZ6sxO8
                     */
                    wantedAdsId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 求人広告詳細情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getWantedAdsDetailResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しない企業 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/official-news": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 公式ニュースリスト取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 公式ニュースリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getOfficialNewsSummaryListResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/official-news/{officialNewsId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 公式ニュース詳細情報取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 公式ニュースID
                     * @example news_0123456789
                     */
                    officialNewsId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 公式ニュース詳細情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getOfficialNewsDetailResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しない企業 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-icon": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ユーザーアイコンリスト取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ユーザーアイコンリストリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getUserIconListResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tag": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** タグリスト取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description タグリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getTagListResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tag/{tagId}/quest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** タグがついているクエストのリスト取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                };
                header?: never;
                path: {
                    /**
                     * @description タグID
                     * @example tag001
                     */
                    tagId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description タグがついているクエストリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getQuestListByTagResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないタグ */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/real-efo/rate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** REAL ~ EFO 交換レート取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description REAL ~ EFO 交換レート */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getRealEfoExchangeRateResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contact": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 問い合わせ */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 問い合わせ内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postContactRequest"];
                };
            };
            responses: {
                /** @description 問い合わせ受付完了 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 内容に不備がある */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postContactFailResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/message-room": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** メッセージルーム情報取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                    /** @description 1で非表示のルームも含める。デフォルトは含めない */
                    includeCloseRoom?: number;
                    /** @description 1での未読ポストがあるもののみ取得。デフォルトは無効 */
                    newPostOnly?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description メッセージルール情報のリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getMessageRoomList"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/message-room/{messageRoomId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** メッセージルーム情報を取得する */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description メッセージルームID
                     * @example sbUrXP0zI6x4_bwXYMVPOEuW7O7pO5VDGcLePoPp0tY
                     */
                    messageRoomId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description メッセージルーム情報 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["oneMessageRoom"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分は参加していなメッセージルームが指定された */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないメッセージルーム */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        /** メッセージルームを非表示にする */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description メッセージルームID
                     * @example sbUrXP0zI6x4_bwXYMVPOEuW7O7pO5VDGcLePoPp0tY
                     */
                    messageRoomId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 非表示化成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分は参加していなメッセージルームが指定された */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しないメッセージルーム */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/message-room/{messageRoomId}/post": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** メッセージルームポスト取得 */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description ソート順指定
                     * @example -id
                     */
                    sort?: string;
                    /**
                     * @description 取得上限指定
                     * @example 50
                     */
                    limit?: number;
                    /**
                     * @description オフセット指定
                     * @example 0
                     */
                    offset?: number;
                };
                header?: never;
                path: {
                    /**
                     * @description メッセージルームID
                     * @example ck69Il_FWmJnUvWCyL5Ck8eC7mTU8bCqRoAyt3cRXvc
                     */
                    messageRoomId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description メッセージルームポストリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["getMessageRoomPostList"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分は参加していなメッセージルームが指定された */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description メッセージルームが存在しない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** メッセージルームにポストを送信する */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description メッセージルームID
                     * @example ck69Il_FWmJnUvWCyL5Ck8eC7mTU8bCqRoAyt3cRXvc
                     */
                    messageRoomId: string;
                };
                cookie?: never;
            };
            /** @description ポスト内容 */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["postMessageRoomPostRequest"];
                };
            };
            responses: {
                /** @description ポスト送信完了 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 内容に不備がある */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["postMessageRoomPostFailResponse"];
                    };
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 自分が所属していないメッセージルームが指定された */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しない求人広告 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/apply-job/{wantedAdsId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 求人広告に応募する */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /**
                     * @description 求人広告ID
                     * @example WnvQUbky-r5Qz4aAmUy0a0s4hWkdk8rcVsGqMEcxSk4
                     */
                    wantedAdsId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 応募成功 */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description アクセストークン期限切れ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 存在しない求人広告 */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @example {
         *       "postBody": "ポストポストポスト"
         *     } */
        postMessageRoomPostRequest: {
            /** @description ポスト内容 */
            postBody: string;
        };
        postMessageRoomPostFailResponse: {
            reason: string;
        };
        /** @example {
         *       "id": "1234567890",
         *       "postUserId": "SGGkkVVQghYpnzn10D8DH6QI1XgJifPYiV9HZ4kGTMo",
         *       "postUserName": "ポストしたユーザーネーム",
         *       "postUnixTime": "1735657200",
         *       "postBody": "ポスト内容"
         *     } */
        oneMessageRoomPost: {
            /** @description ID */
            id: string;
            /** @description ポストしたユーザーID */
            postUserId: string;
            /** @description ポストしたユーザーネーム */
            postUserName: string;
            /** @description ポストした日時(unix time) */
            postUnixTime: string;
            /** @description ポスト内容 */
            postBody: string;
        };
        getMessageRoomPostList: {
            /** @description メッセージルームポストリスト */
            posts: components["schemas"]["oneMessageRoomPost"][];
            /**
             * @description 総ポスト数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "id": "BVS2lSDjg2Vemf8AjYTTwZ0KaZgt-j5nm3s3-GikgNU",
         *       "isOwner": true,
         *       "ownerUserId": "RtG1wMd4XP8ewg9lPHPhythpjqX43uAfhU28XAwgc_Y",
         *       "ownerUserType": "user",
         *       "ownerUserName": "オーナーユーザーネーム",
         *       "invitedUserId": "9dSa8mcLq3Bvwh3itra4rnT-CjyWzclErnhZxDWM8K4",
         *       "invitedUserType": "recruitCompanyUser",
         *       "invitedUserName": "招待ユーザーネーム",
         *       "invitedRecruitCompanyId": "Niccuq6IpUpNlWtZ-IaTEdcybJL1TJ_IlvxraXRtCEk",
         *       "invitedRecruitCompanyName": "株式会社◯◯",
         *       "isClose": false,
         *       "isNewPost": true,
         *       "latestPostUnixTime": "1735657200",
         *       "latestPost": {
         *         "id": "1234567890",
         *         "postUserId": "SGGkkVVQghYpnzn10D8DH6QI1XgJifPYiV9HZ4kGTMo",
         *         "postUserName": "ポストしたユーザーネーム",
         *         "postUnixTime": "1735657200",
         *         "postBody": "ポスト内容"
         *       }
         *     } */
        oneMessageRoom: {
            /** @description ID */
            id: string;
            /** @description 自分がオーナーのメッセージルームか否か */
            isOwner: boolean;
            /** @description オーナーユーザーID */
            ownerUserId: string;
            /**
             * @description オーナーユーザー種別
             * @enum {string}
             */
            ownerUserType: "user" | "recruitCompanyUser";
            /** @description オーナーユーザーネーム */
            ownerUserName: string;
            /** @description オーナーユーザーが求人企業の場合、求人企業ID */
            ownerRecruitCompanyId?: string;
            /** @description オーナーユーザーが求人企業の場合、求人企業名 */
            ownerRecruitCompanyName?: string;
            /** @description 招待ユーザーID */
            invitedUserId: string;
            /**
             * @description 招待ユーザー種別
             * @enum {string}
             */
            invitedUserType: "user" | "recruitCompanyUser";
            /** @description 招待ユーザーネーム */
            invitedUserName: string;
            /** @description 招待ユーザーが求人企業の場合、求人企業ID */
            invitedRecruitCompanyId?: string;
            /** @description 招待ユーザーが求人企業の場合、求人企業名 */
            invitedRecruitCompanyName?: string;
            /** @description 非表示扱いか否か */
            isClose: boolean;
            /** @description 未読のポストがあるか否か */
            isNewPost: boolean;
            /** @description 最後のポスト投稿日時(unix time) */
            latestPostUnixTime: string;
            /** @description 最新のポスト */
            latestPost?: components["schemas"]["oneMessageRoomPost"];
        };
        getMessageRoomList: {
            /** @description メッセージルームリスト */
            messageRooms: components["schemas"]["oneMessageRoom"][];
            /**
             * @description 総メッセージルームリスト数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "message": "Hello, world!"
         *     } */
        getHelloResponse: {
            /** @description Hello, world! */
            message: string;
        };
        /** @example {
         *       "id": "tag0123456789",
         *       "name": "タグ名"
         *     } */
        oneTag: {
            /** @description タグID */
            id: string;
            /** @description タグ名称 */
            name: string;
        };
        /** @example {
         *       "id": "genre0123456789",
         *       "name": "ジャンル名",
         *       "detail": "ジャンルの説明",
         *       "tags": [
         *         {
         *           "id": "tag0123456789",
         *           "name": "タグ名"
         *         }
         *       ]
         *     } */
        getAllGenreResponse: {
            /** @description ジャンルID */
            id: string;
            /** @description ジャンル名称 */
            name: string;
            /** @description ジャンル詳細 */
            detail: string;
            /** @description タグ一覧 */
            tags: components["schemas"]["oneTag"][];
        };
        /** @example {
         *       "id": "genre0123456789",
         *       "name": "ジャンル名",
         *       "detail": "ジャンル詳細",
         *       "categories": [
         *         {
         *           "id": "category0123456789",
         *           "name": "カテゴリ名",
         *           "detail": "カテゴリ詳細",
         *           "tags": [
         *             {
         *               "id": "tag0123456789",
         *               "name": "タグ名"
         *             }
         *           ]
         *         }
         *       ],
         *       "tags": [
         *         {
         *           "id": "tag0123456789",
         *           "name": "タグ名"
         *         }
         *       ]
         *     } */
        getOneGenreResponse: {
            /** @description ジャンルID */
            id: string;
            /** @description ジャンル名称 */
            name: string;
            /** @description ジャンル詳細 */
            detail: string;
            /** @description カテゴリリスト */
            categories: components["schemas"]["oneCategory"][];
            /** @description ジャンルリスト */
            tags: components["schemas"]["oneTag"][];
        };
        /** @example {
         *       "id": "category0123456789",
         *       "name": "カテゴリ名",
         *       "detail": "カテゴリ詳細",
         *       "tags": [
         *         {
         *           "id": "tag0123456789",
         *           "name": "タグ名"
         *         }
         *       ]
         *     } */
        oneCategory: {
            /** @description カテゴリID */
            id: string;
            /** @description カテゴリ名称 */
            name: string;
            /** @description カテゴリ詳細 */
            detail: string;
            /** @description タグリスト */
            tags: components["schemas"]["oneTag"][];
        };
        /** @example {
         *       "id": "category0123456789",
         *       "name": "カテゴリ名",
         *       "detail": "カテゴリ詳細",
         *       "quests": [
         *         {
         *           "id": "quest0123456789",
         *           "name": "クエスト名",
         *           "detail": "クエスト名称",
         *           "tags": [
         *             {
         *               "id": "tag0123456789",
         *               "name": "タグ名"
         *             }
         *           ]
         *         }
         *       ],
         *       "childCategories": [
         *         {
         *           "id": "categoryABCDEFGHIJ",
         *           "name": "子カテゴリ名",
         *           "detail": "子カテゴリ詳細",
         *           "tags": [
         *             {
         *               "id": "tag0123456789",
         *               "name": "タグ名"
         *             }
         *           ]
         *         }
         *       ],
         *       "parentCategory": {
         *         "id": "categoryKLMNOPQRST",
         *         "name": "親カテゴリ名",
         *         "detail": "親カテゴリ詳細",
         *         "tags": [
         *           {
         *             "id": "tag0123456789",
         *             "name": "タグ名"
         *           }
         *         ]
         *       },
         *       "genreId": "genre0123456789",
         *       "genreName": "ジャンル名",
         *       "tags": [
         *         {
         *           "id": "tag0123456789",
         *           "name": "タグ名"
         *         }
         *       ]
         *     } */
        getOneCategoryResponse: {
            /** @description カテゴリID */
            id: string;
            /** @description カテゴリ名称 */
            name: string;
            /** @description カテゴリ詳細 */
            detail: string;
            /** @description クエストリスト */
            quests: components["schemas"]["oneQuest"][];
            /** @description 子カテゴリリスト */
            childCategories?: components["schemas"]["oneCategory"][];
            /** @description 親カテゴリ */
            parentCategory?: components["schemas"]["oneCategory"];
            /** @description ジャンルID */
            genreId: string;
            /** @description ジャンル名称 */
            genreName: string;
            /** @description タグリスト */
            tags: components["schemas"]["oneTag"][];
        };
        /** @example {
         *       "id": "quest0123456789",
         *       "name": "クエスト名",
         *       "detail": "クエスト詳細",
         *       "tags": [
         *         {
         *           "id": "tag0123456789",
         *           "name": "タグ名"
         *         }
         *       ],
         *       "isClear": false
         *     } */
        oneQuest: {
            /** @description クエストID */
            id: string;
            /** @description クエスト名称 */
            name: string;
            /** @description クエスト詳細 */
            detail: string;
            /** @description タグリスト */
            tags: components["schemas"]["oneTag"][];
            /** @description クリア済みのクエストか否か */
            isClear?: boolean;
        };
        /** @example {
         *       "id": "quest0123456789",
         *       "name": "クエスト名",
         *       "detail": "クエスト詳細"
         *     } */
        oneQuestWithoutTags: {
            /** @description クエストID */
            id: string;
            /** @description クエスト名称 */
            name: string;
            /** @description クエスト詳細 */
            detail: string;
        };
        /** @example {
         *       "id": "quest0123456789",
         *       "name": "クエスト名",
         *       "detail": "クエスト詳細",
         *       "missionNum": "10,",
         *       "isClear": false,
         *       "tags": [
         *         {
         *           "id": "tag0123456789",
         *           "name": "タグ名"
         *         }
         *       ]
         *     } */
        getOneQuestResponse: {
            /** @description クエストID */
            id: string;
            /** @description クエスト名称 */
            name: string;
            /** @description クエスト詳細 */
            detail: string;
            /** @description ミッション数 */
            missionNum: number;
            /** @description クリア済みのクエストか否か */
            isClear: boolean;
            /** @description タグリスト */
            tags: components["schemas"]["oneTag"][];
        };
        /** @example {
         *       "id": "mxUtp-vKFLoRXucQf3b3gbNXOESNcTajSLuvzdpC7P8",
         *       "questId": "quest0123456789",
         *       "questName": "クエスト名",
         *       "expireAt": 1735743600
         *     } */
        postQuestMissionResponse: {
            /** @description クエストセッションID */
            id: string;
            /** @description クエストID */
            questId: string;
            /** @description クエスト名 */
            questName: string;
            /** @description セッション有効期限(unix time) */
            expireAt: number;
        };
        /** @example {
         *       "id": "misson0123456789",
         *       "questId": "questId",
         *       "questName": "クエスト名",
         *       "answerType": "one_choice",
         *       "optionPath": "/quest0123456789/1/option.json",
         *       "totalMissions": 10,
         *       "currentMissionIndex": 1
         *     } */
        getQuestMissionResponse: {
            /** @description ミッションID */
            id: string;
            /** @description クエストID */
            questId: string;
            /** @description クエスト名称 */
            questName: string;
            /** @description セッション有効期限(unix time) */
            expireAt: number;
            /** @description 問題文パス */
            questionPath: string;
            /** @description 回答タイプ */
            answerType: string;
            /** @description 選択肢パス */
            optionPath: string;
            /** @description 総ミッション数 */
            totalMissions: number;
            /** @description 現在のミッションの位置 */
            currentMissionIndex: number;
        };
        /** @example {
         *       "answer": "1"
         *     } */
        postQuestMissionSessionRequest: {
            /** @description 回答 */
            answer: string;
        };
        /** @example {
         *       "id": "mxUtp-vKFLoRXucQf3b3gbNXOESNcTajSLuvzdpC7P8",
         *       "expireAt": 1735743600,
         *       "answerType": "one_choice",
         *       "isCorrect": "true,",
         *       "correctAnswer": "1",
         *       "commentaryPath": "/quest0123456789/1/commentary.json",
         *       "totalMissions": 10,
         *       "currentMissionIndex": 1,
         *       "isFinish": false,
         *       "disableBackWrongAnswer": false
         *     } */
        postQuestMissionSessionResponse: {
            /** @description クエストセッションID */
            id: string;
            /** @description 有効期限(unix time) */
            expireAt: number;
            /** @description 回答タイプ */
            answerType: string;
            /** @description 正解か否か */
            isCorrect: boolean;
            /** @description 正解 */
            correctAnswer: string;
            /** @description 解説文パス */
            commentaryPath: string;
            /** @description 総ミッション数 */
            totalMissions: number;
            /** @description 現在のミッションの位置 */
            currentMissionIndex: number;
            /** @description クエストミッションが終了したか否か */
            isFinished: boolean;
            /** @description 不正解時、再度回答を許すか否か */
            disableBackWrongAnswer: boolean;
        };
        /** @example {
         *       "id": "mxUtp-vKFLoRXucQf3b3gbNXOESNcTajSLuvzdpC7P8",
         *       "isPerfect": true,
         *       "totalMissionNum": 10,
         *       "userCorrectNum": 10,
         *       "totalScore": 100,
         *       "userScore": 100,
         *       "scaleForExp": 1,
         *       "userAddExp": 0,
         *       "addPoint": 30,
         *       "totalPoint": 30,
         *       "pointBounsPer": 1,
         *       "userLevel": 1,
         *       "messages": [
         *         "メッセージ1",
         *         "メッセージ2"
         *       ]
         *     } */
        getResultQuestMissionResponse: {
            /** @description クエストセッションID */
            id: string;
            /** @description クエストクリアか否か */
            isPerfect: boolean;
            /** @description 総ミッション数 */
            totalMissionNum: number;
            /** @description 正解ミッション数 */
            userCorrectNum: number;
            /** @description 合計スコア */
            totalScore: number;
            /** @description ユーザースコア */
            userScore: number;
            /** @description 将来廃止 */
            scaleForExp: number;
            /** @description 将来廃止 */
            userAddExp: number;
            /** @description 追加ポイント */
            addPoint: number;
            /** @description ミッション総ポイント数 */
            totalPoint: number;
            /** @description ポイントボーナス率 */
            pointBounsPer: number;
            /** @description ユーザーレベル */
            userLevel: number;
            /** @description 表示するメッセージリスト */
            messages: string[];
        };
        /** @example {
         *       "id": "user0123456789",
         *       "nickname": "ユーザーネーム",
         *       "mailAddress": "user@example.com",
         *       "selfIntroduction": "自己紹介",
         *       "purpose": "学習目的",
         *       "targetSkill": "取得したいスキル",
         *       "targetKnowledge": "取得したい知識",
         *       "userIconId": 1,
         *       "userIconPath": "/img/icon01.png",
         *       "userLevel": 1
         *     } */
        getUserInfoByMyself: {
            /** @description ユーザーID */
            id: string;
            /** @description ユーザーネーム */
            nickname: string;
            /**
             * Format: email
             * @description メールアドレス
             */
            mailAddress: string;
            /** @description 自己紹介文 */
            selfIntroduction: string;
            /** @description 学習目的 */
            purpose: string;
            /** @description 取得したいスキル */
            targetSkill: string;
            /** @description 取得したい知識 */
            targetKnowledge: string;
            /** @description ユーザーアイコンID */
            userIconId: number;
            /** @description ユーザーアイコン画像へのパス */
            userIconPath: string;
            /** @description ユーザーレベル */
            userLevel: number;
        };
        /** @example {
         *       "nickname": "ユーザーネーム",
         *       "selfIntroduction": "自己紹介文",
         *       "purpose": "学習目的",
         *       "targetSkill": "取得したいスキル",
         *       "targetKnowledge": "取得したい知識",
         *       "userIconId": 2
         *     } */
        putUserInfoByMyself: {
            /** @description ユーザーネーム */
            nickname: string;
            /** @description 自己紹介文 */
            selfIntroduction: string;
            /** @description 学習目的 */
            purpose: string;
            /** @description 取得したいスキル */
            targetSkill: string;
            /** @description 取得したい知識 */
            targetKnowledge: string;
            /** @description ユーザーアイコンID */
            userIconId: number;
        };
        /** @example {
         *       "id": "user0123456789",
         *       "nickname": "ユーザーネーム",
         *       "mailAddress": "user@example.com",
         *       "selfIntroduction": "自己紹介",
         *       "purpose": "学習目的",
         *       "targetSkill": "取得したいスキル",
         *       "targetKnowledge": "取得したい知識",
         *       "userIconId": 2,
         *       "userIconPath": "/img/icon02.png"
         *     } */
        putResponseUserInfoByMyself: {
            /** @description ユーザーID */
            id: string;
            /** @description ユーザーネーム */
            nickname: string;
            /**
             * Format: email
             * @description メールアドレス
             */
            mailAddress: string;
            /** @description 自己紹介文 */
            selfIntroduction: string;
            /** @description 学習目的 */
            purpose: string;
            /** @description 取得したいスキル */
            targetSkill: string;
            /** @description 取得したい知識 */
            targetKnowledge: string;
            /** @description ユーザーアイコンID */
            userIconId: number;
            /** @description ユーザーアイコン画像へのパス */
            userIconPath: string;
        };
        /** @example {
         *       "name": "氏名",
         *       "nameCalling": "しめい",
         *       "postalCode": "123-4567",
         *       "prefectureCode": 13,
         *       "address": "住所",
         *       "addressCalling": "じゅうしょ",
         *       "phoneNumber": "0123-456-7890",
         *       "sex": "性別",
         *       "rewardsAndPunishments": "賞罰",
         *       "picturePath": "/user0123456789/picture.jpg",
         *       "contactPostalCode": "987-6543",
         *       "contactPrefectureCode": 1,
         *       "contactAddress": "連絡先住所",
         *       "contactAddressCalling": "れんらくさきじゅうしょ",
         *       "contactPhoneNumber": "0987-654-3210",
         *       "birthDay": "2024-01-01",
         *       "appealPoint": "アピールポイント",
         *       "wishes": "本人希望"
         *     } */
        getUserPrivateProfileByMyself: {
            /** @description 氏名 */
            name: string;
            /** @description 氏名(ふりがな) */
            nameCalling: string;
            /** @description 郵便番号 */
            postalCode: string;
            /** @description 都道府県コード */
            prefectureCode: number;
            /** @description 住所 */
            address: string;
            /** @description 住所(ふりがな) */
            addressCalling: string;
            /** @description 電話番号 */
            phoneNumber: string;
            /** @description 性別 */
            sex: string;
            /** @description 賞罰 */
            rewardsAndPunishments: string;
            /** @description 写真画像へのパス */
            picturePath: string;
            /** @description 連絡先郵便番号 */
            contactPostalCode: string;
            /** @description 連絡先都道府県コード */
            contactPrefectureCode: number;
            /** @description 連絡先住所 */
            contactAddress: string;
            /** @description 連絡先住所(ふりがな) */
            contactAddressCalling: string;
            /** @description 連絡先電話番号 */
            contactPhoneNumber: string;
            /** @description 誕生日(YYYY-MM-DD) */
            birthDay: string;
            /** @description アピールポイント */
            appealPoint: string;
            /** @description 本人希望 */
            wishes: string;
        };
        /** @example {
         *       "name": "氏名",
         *       "nameCalling": "しめい",
         *       "postalCode": "123-4567",
         *       "prefectureCode": 13,
         *       "address": "住所",
         *       "addressCalling": "じゅうしょ",
         *       "phoneNumber": "0123-456-7890",
         *       "sex": "性別",
         *       "rewardsAndPunishments": "賞罰",
         *       "picturePath": "/user0123456789/picture.jpg",
         *       "contactPostalCode": "987-6543",
         *       "contactPrefectureCode": 1,
         *       "contactAddress": "連絡先住所",
         *       "contactAddressCalling": "れんらくさきじゅうしょ",
         *       "contactPhoneNumber": "0987-654-3210",
         *       "birthDay": "2024-01-01",
         *       "appealPoint": "アピールポイント",
         *       "wishes": "本人希望"
         *     } */
        putUserPrivateProfileByMyself: {
            /** @description 氏名 */
            name: string;
            /** @description 氏名(ふりがな) */
            nameCalling: string;
            /** @description 郵便番号 */
            postalCode: string;
            /** @description 都道府県コード */
            prefectureCode: number;
            /** @description 住所 */
            address: string;
            /** @description 住所(ふりがな) */
            addressCalling: string;
            /** @description 電話番号 */
            phoneNumber: string;
            /** @description 性別 */
            sex: string;
            /** @description 賞罰 */
            rewardsAndPunishments: string;
            /** @description 写真画像へのパス */
            picturePath: string;
            /** @description 連絡先郵便番号 */
            contactPostalCode: string;
            /** @description 連絡先都道府県コード */
            contactPrefectureCode: number;
            /** @description 連絡先住所 */
            contactAddress: string;
            /** @description 連絡先住所(ふりがな) */
            contactAddressCalling: string;
            /** @description 連絡先電話番号 */
            contactPhoneNumber: string;
            /** @description 誕生日(YYYY-MM-DD) */
            birthDay: string;
            /** @description アピールポイント */
            appealPoint: string;
            /** @description 本人希望 */
            wishes: string;
        };
        getUserEducationalHistoryByMyself: {
            /** @description 学歴リスト */
            educationalHistory: components["schemas"]["oneEducationalHistory"][];
        };
        /** @example {
         *       "id": "1234567890",
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "educationalHistory": "学歴内容"
         *     } */
        oneEducationalHistory: {
            /** @description 学歴ID */
            id: string;
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 学歴内容 */
            educationalHistory: string;
        };
        /** @example {
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "educationalHistory": "学歴内容"
         *     } */
        postUserEducationalHistoryByMyself: {
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 学歴内容 */
            educationalHistory: string;
        };
        /** @example {
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "educationalHistory": "学歴内容"
         *     } */
        putUserEducationalHistoryByMyself: {
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 学歴内容 */
            educationalHistory: string;
        };
        getUserJobHistoryByMyself: {
            jobHistory: components["schemas"]["oneJobHistory"][];
        };
        /** @example {
         *       "id": "1234567890",
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "jobHistory": "職歴内容"
         *     } */
        oneJobHistory: {
            /** @description 職歴ID */
            id: string;
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 職歴内容 */
            jobHistory: string;
        };
        /** @example {
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "jobHistory": "職歴内容"
         *     } */
        postUserJobHistoryByMyself: {
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 職歴内容 */
            jobHistory: string;
        };
        /** @example {
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "jobHistory": "職歴内容"
         *     } */
        putUserJobHistoryByMyself: {
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 職歴内容 */
            jobHistory: string;
        };
        getUserHaveLicenseByMyself: {
            haveLicense: components["schemas"]["oneLicense"][];
        };
        /** @example {
         *       "id": "1234567890",
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "license": "所有資格内容"
         *     } */
        oneLicense: {
            /** @description 所有資格ID */
            id: string;
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 所有資格内容 */
            license: string;
        };
        /** @example {
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "license": "所有資格内容"
         *     } */
        postUserHaveLicenseByMyself: {
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 所有資格内容 */
            license: string;
        };
        /** @example {
         *       "targetYear": "2025",
         *       "targetMonth": "01",
         *       "license": "所有資格内容"
         *     } */
        putUserHaveLicenseByMyself: {
            /** @description 年(YYYY) */
            targetYear: string;
            /** @description 月(MM) */
            targetMonth: string;
            /** @description 所有資格内容 */
            license: string;
        };
        getUserQuestHistoryByMyself: {
            /** @description クエスト履歴リスト */
            questHistories: components["schemas"]["oneQuestHistory"][];
            /**
             * @description 総クエスト履歴数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "id": "1234567890",
         *       "questId": "quest0123456789",
         *       "questName": "クエスト名",
         *       "score": 100,
         *       "isClear": true,
         *       "playYear": "2025",
         *       "playMonth": "01",
         *       "playDay": "01",
         *       "playHour": "00",
         *       "playMinute": "00"
         *     } */
        oneQuestHistory: {
            /** @description クエスト履歴ID */
            id: string;
            /** @description クエストID */
            questId: string;
            /** @description クエスト名称 */
            questName: string;
            /** @description スコア結果 */
            score: number;
            /** @description クリアしたか否か */
            isClear: boolean;
            /** @description プレイ年(YYYY) */
            playYear: string;
            /** @description プレイ月(MM) */
            playMonth: string;
            /** @description プレイ日(DD) */
            playDay: string;
            /** @description プレイ時(HH) */
            playHour: string;
            /** @description プレイ分(mm) */
            playMinute: string;
        };
        /** @example {
         *       "id": "V6Py5iIfmrxlDKy_c4W05lOtvkjcpBgSuIysWJpJTWY",
         *       "displayName": "求人企業名称",
         *       "establishmentYear": "2025",
         *       "establishmentMonth": "01",
         *       "establishmentDay": "01",
         *       "postalCode": "123-4567",
         *       "prefectureCode": 13,
         *       "address": "求人企業住所",
         *       "phoneNumber": "0123-456-7890",
         *       "faxNumber": "0123-456-7890",
         *       "officialSiteUrl": "https://www.example.com/",
         *       "profile": "求人企業概要",
         *       "employees": "従業員数 100名",
         *       "netSales": "売上高",
         *       "contactPersonName": "採用担当者名",
         *       "contactPersonPosition": "採用担当者役職",
         *       "contactPersonPhoneNumber": "0123-456-7890",
         *       "contactPersionMailAddress": "saiyou@example.com",
         *       "updatedAtYear": "2025",
         *       "updatedAtMonth": "01",
         *       "updatedAtDay": "01"
         *     } */
        getRecruitCompanyDetailResponse: {
            /** @description 求人企業ID */
            id: string;
            /** @description 企業名(表示用) */
            displayName: string;
            /** @description 設立年月日(YYYY) */
            establishmentYear: string;
            /** @description 設立年月日(MM) */
            establishmentMonth: string;
            /** @description 設立年月日(DD) */
            establishmentDay: string;
            /** @description 郵便番号 */
            postalCode: string;
            /** @description 都道府県コード */
            prefectureCode: number;
            /** @description 住所 */
            address: string;
            /** @description 電話番号 */
            phoneNumber: string;
            /** @description FAX番号 */
            faxNumber: string;
            /** @description 公式サイトURL */
            officialSiteUrl: string;
            /** @description 企業概要 */
            profile: string;
            /** @description 従業員数 */
            employees: string;
            /** @description 売上高 */
            netSales: string;
            /** @description 担当者名 */
            contactPersonName: string;
            /** @description 担当者役職 */
            contactPersonPosition: string;
            /** @description 担当者電話番号 */
            contactPersonPhoneNumber: string;
            /** @description 担当者メールアドレス */
            contactPersionMailAddress: string;
            /** @description 最終更新年月日(YYYY) */
            updatedAtYear: string;
            /** @description 最終更新年月日(MM) */
            updatedAtMonth: string;
            /** @description 最終更新年月日(DD) */
            updatedAtDay: string;
        };
        getWantedAdsSummaryListResponse: {
            /** @description 求人広告リスト */
            ads: components["schemas"]["oneWantedAdsSummary"][];
            /**
             * @description 求人広告総数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "id": "MFn6K2ABCnOMFFv9LvNmHb2X-hjLw8jfgXq9lZ6sxO8",
         *       "recruitCompanyId": "V6Py5iIfmrxlDKy_c4W05lOtvkjcpBgSuIysWJpJTWY",
         *       "recruitCompanyName": "求人企業名",
         *       "position": "募集職種",
         *       "details": "仕事内容の詳細",
         *       "updatedAtYear": "2025",
         *       "updatedAtMonth": "01",
         *       "updatedAtDay": "01"
         *     } */
        oneWantedAdsSummary: {
            /** @description 求人広告ID */
            id: string;
            /** @description 求人企業ID */
            recruitCompanyId: string;
            /** @description 求人企業名 */
            recruitCompanyName: string;
            /** @description 募集職種 */
            position: string;
            /** @description 仕事内容の詳細 */
            details: string;
            /** @description 採取更新年月日(YYYY) */
            updatedAtYear: string;
            /** @description 採取更新年月日(MM) */
            updatedAtMonth: string;
            /** @description 採取更新年月日(DD) */
            updatedAtDay: string;
        };
        /** @example {
         *       "id": "MFn6K2ABCnOMFFv9LvNmHb2X-hjLw8jfgXq9lZ6sxO8",
         *       "recruitCompanyId": "V6Py5iIfmrxlDKy_c4W05lOtvkjcpBgSuIysWJpJTWY",
         *       "recruitCompanyName": "求人企業名",
         *       "title": "求人タイトル",
         *       "position": "募集職種",
         *       "workLocation": "勤務地",
         *       "employmentStatus": "雇用形態",
         *       "numberOfPeople": "募集人数",
         *       "details": "仕事内容の詳細",
         *       "requirements": "応募条件",
         *       "salaryAndBenefits": "給与・待遇",
         *       "officeHour": "勤務時間",
         *       "dayOff": "休日・休暇",
         *       "welfareProgram": "福利厚生",
         *       "howToApply": "応募方法",
         *       "applicationDocuments": "応募書類",
         *       "applicationDeadlineYear": "2025",
         *       "applicationDeadlineMonth": "12",
         *       "applicationDeadlineDay": "31",
         *       "updatedAtYear": "2025",
         *       "updatedAtMonth": "01",
         *       "updatedAtDay": "01"
         *     } */
        getWantedAdsDetailResponse: {
            /** @description 求人広告ID */
            id: string;
            /** @description 求人企業ID */
            recruitCompanyId: string;
            /** @description 求人企業名 */
            recruitCompanyName: string;
            /** @description 求人タイトル */
            title: string;
            /** @description 募集職種 */
            position: string;
            /** @description 勤務地 */
            workLocation: string;
            /** @description 雇用形態 */
            employmentStatus: string;
            /** @description 募集人数 */
            numberOfPeople: string;
            /** @description 仕事内容の詳細 */
            details: string;
            /** @description 応募条件 */
            requirements?: string;
            /** @description 給与・待遇 */
            salaryAndBenefits: string;
            /** @description 勤務時間 */
            officeHour: string;
            /** @description 休日・休暇 */
            dayOff: string;
            /** @description 福利厚生 */
            welfareProgram: string;
            /** @description 応募方法 */
            howToApply: string;
            /** @description 応募書類 */
            applicationDocuments: string;
            /** @description 応募締切日(YYYY) */
            applicationDeadlineYear: string;
            /** @description 応募締切日(MM) */
            applicationDeadlineMonth: string;
            /** @description 応募締切日(DD) */
            applicationDeadlineDay: string;
            /** @description 最終更新年月日(YYYY) */
            updatedAtYear: string;
            /** @description 最終更新年月日(MM) */
            updatedAtMonth: string;
            /** @description 最終更新年月日(DD) */
            updatedAtDay: string;
        };
        getOfficialNewsSummaryListResponse: {
            /** @description 公式ニュースリスト */
            news: components["schemas"]["oneOfficialNewsSummary"][];
            /**
             * @description 総公式ニュース数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "id": "news_0123456789",
         *       "title": "タイトル",
         *       "priority": "10,",
         *       "createdAtYear": "2025",
         *       "createdAtMonth": "01",
         *       "createdAtDay": "01",
         *       "updatedAtYear": "2025",
         *       "updatedAtMonth": "01",
         *       "updatedAtDay": "02"
         *     } */
        oneOfficialNewsSummary: {
            /** @description 公式ニュースID */
            id: string;
            /** @description タイトル */
            title: string;
            /** @description 優先順位重み付け */
            priority: number;
            /** @description 公開開始年月日(YYYY) */
            createdAtYear: string;
            /** @description 公開開始年月日(MM) */
            createdAtMonth: string;
            /** @description 公開開始年月日(DD) */
            createdAtDay: string;
            /** @description 最終更新年月日(YYYY) */
            updatedAtYear: string;
            /** @description 最終更新年月日(MM) */
            updatedAtMonth: string;
            /** @description 最終更新年月日(DD) */
            updatedAtDay: string;
        };
        /** @example {
         *       "id": "news_0123456789",
         *       "title": "タイトル",
         *       "detail": "ニュース本文",
         *       "priority": "10,",
         *       "createdAtYear": "2025",
         *       "createdAtMonth": "01",
         *       "createdAtDay": "01",
         *       "updatedAtYear": "2025",
         *       "updatedAtMonth": "01",
         *       "updatedAtDay": "02"
         *     } */
        getOfficialNewsDetailResponse: {
            /** @description 公式ニュースID */
            id: string;
            /** @description タイトル */
            title: string;
            /** @description ニュース本文 */
            detail: string;
            /** @description 優先順位重み付け */
            priority: number;
            /** @description 公開開始年月日(YYYY) */
            createdAtYear: string;
            /** @description 公開開始年月日(MM) */
            createdAtMonth: string;
            /** @description 公開開始年月日(DD) */
            createdAtDay: string;
            /** @description 最終更新年月日(YYYY) */
            updatedAtYear: string;
            /** @description 最終更新年月日(MM) */
            updatedAtMonth: string;
            /** @description 最終更新年月日(DD) */
            updatedAtDay: string;
        };
        getUserIconListResponse: {
            /** @description ユーザーアイコンリスト */
            userIcons: components["schemas"]["oneUserIcon"][];
        };
        /** @example {
         *       "id": "icon_001",
         *       "iconPath": "/img/icon/icon_001.png"
         *     } */
        oneUserIcon: {
            /** @description ユーザーアイコンID */
            id: string;
            /** @description ユーザーアイコン画像へのパス */
            iconPath: string;
        };
        getTagListResponse: {
            /** @description タグリスト */
            tags: components["schemas"]["oneTag"][];
            /**
             * @description 総タグ数
             * @example 100
             */
            total: number;
        };
        getQuestListByTagResponse: {
            /** @description クエストリスト */
            quests: components["schemas"]["oneQuestWithoutTags"][];
            /**
             * @description 総対象クエスト数
             * @example 100
             */
            total: number;
        };
        getUserHaveSkillListResponse: {
            /** @description 保有スキルリスト */
            skills: components["schemas"]["oneSkill"][];
            /**
             * @description 保有スキル総数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "id": "skill0123456789",
         *       "name": "スキル名",
         *       "level": 1,
         *       "GottenAtYear": "2025",
         *       "GottenAtMonth": "01",
         *       "GottenAtDay": "01"
         *     } */
        oneSkill: {
            /** @description スキルID */
            id: string;
            /** @description スキル名称 */
            name: string;
            /** @description スキルレベル */
            level: number;
            /** @description 取得日時(YYYY) */
            GottenAtYear: string;
            /** @description 取得日時(MM) */
            GottenAtMonth: string;
            /** @description 取得日時(DD) */
            GottenAtDay: string;
        };
        /** @example {
         *       "level": 1,
         *       "totalScore": 1000,
         *       "point": 1200,
         *       "playQuestCount": 100,
         *       "clearQuestCount": 10,
         *       "totalAnswerCount": 1000,
         *       "totalCorrectAnswerCount": 500
         *     } */
        getUserResultsResponse: {
            /** @description ユーザーレベル */
            level: number;
            /** @description 総獲得スコア */
            totalScore: number;
            /** @description 保有ポイント数 */
            point: number;
            /** @description 総プレイクエスト数 */
            playQuestCount: number;
            /** @description クリアクエスト数 */
            clearQuestCount: number;
            /** @description 総回答数 */
            totalAnswerCount: number;
            /** @description 総正解回答数 */
            totalCorrectAnswerCount: number;
        };
        /** @example {
         *       "haveEfo": 100,
         *       "totalAddEfo": 1000,
         *       "totalConsumeEfo": 900
         *     } */
        getUserHaveEfoResponse: {
            /** @description 現在保有しているEPO */
            haveEfo: number;
            /** @description 総獲得EPO */
            totalAddEfo: number;
            /** @description 総消費EFO */
            totalConsumeEfo: number;
        };
        getUserEfoHistoryResponse: {
            /** @description ユーザーEFO履歴リスト */
            histories: components["schemas"]["oneUserEfoHistory"][];
            /**
             * @description 総履歴数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "transactionId": "KFGQ0lBMrYL0jfJHP4YUzm3XSdBcDEj3QVQdoJxdFLc",
         *       "addEfo": 100,
         *       "consumeEfo": 0,
         *       "reason": "questClear",
         *       "createdAtYear": "2025",
         *       "createdAtMonth": "01",
         *       "createdAtDay": "01",
         *       "createdAtHour": "00",
         *       "createdAtMinute": "00",
         *       "createdAtSecond": "00"
         *     } */
        oneUserEfoHistory: {
            /** @description トランザクションID */
            transactionId: string;
            /** @description 加算されたEFO */
            addEfo: number;
            /** @description 消費したEFO */
            consumeEfo: number;
            /**
             * @description 理由 (questClear=クエストクリア、exchangeReal=REALに変換)
             * @enum {string}
             */
            reason: "questClear" | "exchangeReal";
            /** @description 発生日時(YYYY) */
            createdAtYear: string;
            /** @description 発生日時(MM) */
            createdAtMonth: string;
            /** @description 発生日時(DD) */
            createdAtDay: string;
            /** @description 発生日時(HH) */
            createdAtHour: string;
            /** @description 発生日時(mm) */
            createdAtMinute: string;
            /** @description 発生日時(SS) */
            createdAtSecond: string;
        };
        /** @example {
         *       "haveReal": 10,
         *       "totalAddReal": 20,
         *       "totalConsumeReal": 10
         *     } */
        getUserHaveRealResponse: {
            /** @description 現在保有しているREAL */
            haveReal: number;
            /** @description 総獲得REAL */
            totalAddReal: number;
            /** @description 総消費REAL */
            totalConsumeReal: number;
        };
        getUserRealHistoryResponse: {
            /** @description ユーザーREAL履歴リスト */
            histories: components["schemas"]["oneUserRealHistory"][];
            /**
             * @description 総履歴数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "id": "ZqKL-f0jPYbtEgv6fbeTOcUagxrVj7QYBwc9ENH8HhM",
         *       "addReal": 10,
         *       "consumeReal": 0,
         *       "reason": "exchangeFromEfo",
         *       "adaptedExchangeRate": 100,
         *       "createdAtYear": "2025",
         *       "createdAtMonth": "01",
         *       "createdAtDay": "01",
         *       "createdAtHour": "00",
         *       "createdAtMinute": "00",
         *       "createdAtSecond": "00"
         *     } */
        oneUserRealHistory: {
            /** @description REAL ID */
            id: string;
            /** @description 加算されたREAL */
            addReal: number;
            /** @description 消費したREAL */
            consumeReal: number;
            /**
             * @description 理由 (exchangeFromEfo=EFOから交換、exchangeToDigico=デジコに交換)
             * @enum {string}
             */
            reason: "exchangeFromEfo" | "exchangeToDigico";
            /** @description EFOから交換時の1REAL=何EFOだったか。EFO交換以外の場合は0が入る */
            adaptedExchangeRate: number;
            /** @description 発生日時(YYYY) */
            createdAtYear: string;
            /** @description 発生日時(MM) */
            createdAtMonth: string;
            /** @description 発生日時(DD) */
            createdAtDay: string;
            /** @description 発生日時(HH) */
            createdAtHour: string;
            /** @description 発生日時(mm) */
            createdAtMinute: string;
            /** @description 発生日時(SS) */
            createdAtSecond: string;
        };
        /** @example {
         *       "rate": 100,
         *       "periodEndUnixTime": 1767193200
         *     } */
        oneRealEfoRate: {
            /** @description 交換レート */
            rate: number;
            /** @description 有効期限(unix time) */
            periodEndUnixTime?: number;
        };
        getRealEfoExchangeRateResponse: {
            /** @description デフォルトの交換レート */
            default?: components["schemas"]["oneRealEfoRate"];
        };
        postUserMeEfoExchangeRealRequest: {
            /**
             * @description EFO->REAL変換希望数
             * @example 10
             */
            hopeToExchangeReal: number;
        };
        /** @example {
         *       "transactionId": "JVSx152NuoB_FMo5ZWTckXc3Ihi4epF6R86ltP364D0",
         *       "consumeEfo": 1000,
         *       "currentEfo": 0,
         *       "addReal": 10,
         *       "currentReal": 10,
         *       "rate": 100
         *     } */
        postUserMeEfoExchangeRealSuccessResponse: {
            /** @description トランザクションID */
            transactionId: string;
            /** @description 消費したEFO */
            consumeEfo: number;
            /** @description 現在保有EFO */
            currentEfo: number;
            /** @description 追加REAL */
            addReal: number;
            /** @description 現在保有しているREAL */
            currentReal: number;
            /** @description 1REAL=何EFOで交換したか */
            rate: number;
        };
        /** @example {
         *       "reason": "notEnoughHavingEfo",
         *       "message": "保有EFOが不足しています"
         *     } */
        postUserMeEfoExchangeRealFailResponse: {
            /**
             * @description 失敗理由
             * @enum {string}
             */
            reason: "notEnoughHavingEfo" | "invalidHopeToExchangeReal" | "outOfExchange";
            /** @description 失敗に対するメッセージ */
            message: string;
        };
        /** @example {
         *       "mailAddress": "user@example.com",
         *       "nickname": "ユーザーネーム",
         *       "subject": "題名",
         *       "body": "問い合わせ内容本文"
         *     } */
        postContactRequest: {
            /**
             * Format: email
             * @description メールアドレス
             */
            mailAddress: string;
            /** @description ユーザーネーム */
            nickname?: string;
            /** @description 題名 */
            subject: string;
            /** @description 問い合わせ本文 */
            body: string;
        };
        /** @example {
         *       "reason": "本文の文字数が上限を超えています"
         *     } */
        postContactFailResponse: {
            /** @description 失敗理由 */
            reason: string;
        };
        postUserMeRealExchangeDigicoRequest: {
            /**
             * @description REAL->Digico交換希望数
             * @example 1
             */
            hopeToExchangeDigico: number;
        };
        /** @example {
         *       "digicoUrl": "https://example.com/abc",
         *       "digicoCode": "1234567890",
         *       "consumeReal": 100
         *     } */
        postUserMeRealExchangeDigicoSuccessResponse: {
            /** @description ギフトURL */
            digicoUrl: string;
            /** @description ギフトコード */
            digicoCode: string;
            /** @description 消費したREAL */
            consumeReal: number;
        };
        /** @example {
         *       "reason": "notEnoughHavingReal",
         *       "message": "保有REALが不足しています"
         *     } */
        postUserMeRealExchangeDigicoFailResponse: {
            /**
             * @description 失敗理由
             * @enum {string}
             */
            reason: "notEnoughHavingReal" | "invalidHopeToExchangeDigico" | "errorFromDigico" | "outOfExchange";
            /** @description 失敗メッセージ */
            message: string;
        };
        getUserHonorResponse: {
            /** @description 保有称号リスト */
            honors: components["schemas"]["oneUserHonor"][];
            /** @description セット中の称号 */
            setHonor?: components["schemas"]["oneUserHonor"];
            /**
             * @description 保有総数
             * @example 100
             */
            total: number;
        };
        /** @example {
         *       "honorId": "honor1234567890"
         *     } */
        putUserHonorRequest: {
            /** @description 称号ID */
            honorId: string;
        };
        /** @example {
         *       "honorId": "honor1234567890",
         *       "honorName": "称号名",
         *       "honorDetail": "称号詳細",
         *       "createdAtYear": "2025",
         *       "createdAtMonth": "01",
         *       "createdAtDay": "01",
         *       "createdAtHour": "00",
         *       "createdAtMinute": "00",
         *       "createdAtSecond": "00"
         *     } */
        oneUserHonor: {
            /** @description 称号ID */
            honorId: string;
            /** @description 称号名称 */
            honorName: string;
            /** @description 称号詳細 */
            honorDetail: string;
            /** @description 取得日時(YYYY) */
            createdAtYear: string;
            /** @description 取得日時(MM) */
            createdAtMonth: string;
            /** @description 取得日時(DD) */
            createdAtDay: string;
            /** @description 取得日時(HH) */
            createdAtHour: string;
            /** @description 取得日時(mm) */
            createdAtMinute: string;
            /** @description 取得日時(ss) */
            createdAtSecond: string;
        };
        /** @example {
         *       "openForRecruitCompany": true
         *     } */
        getUserProfilePermissionResponse: {
            /** @description 求人企業にプロフィールを公開するか */
            openForRecruitCompany: boolean;
        };
        /** @example {
         *       "openForRecruitCompany": false
         *     } */
        putUserProfilePermissionRequest: {
            /** @description 求人企業にプロフィールを公開するか */
            openForRecruitCompany: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
